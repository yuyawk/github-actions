---
name: Install bazelisk

inputs:
  bazelisk-version:
    description: Bazelisk version. Defaults to the latest version.
    required: false
    default: null

runs:
  using: composite
  steps:
    - name: Set default version
      if: ${{ inputs.bazelisk-version == null }}
      shell: bash
      run: |
        set -ex
        latest_tag=$(curl -H "X-GitHub-Api-Version:2022-11-28" \
            -s https://api.github.com/repos/bazelbuild/bazelisk/releases/latest \
          | grep -oE '"name": "v[0-9]+\.[0-9]+\.[0-9]+"' \
          |  sed -E 's/"name": "(.*)"/\1/')
        echo "bazelisk_target_version=${latest_tag}" >> ${GITHUB_ENV}
    - name: Set given version
      if: ${{ inputs.bazelisk-version != null }}
      shell: bash
      run: |
        echo "bazelisk_target_version=${BAZELISK_VERSION}" >> ${GITHUB_ENV}
      env:
        BAZELISK_VERSION: ${{ inputs.bazelisk-version }}
    - name: Make directory
      shell: bash
      id: mkdir
      run: |
        bindir="${RUNNER_TEMP}/yuyawk/github-actions/install-bazelisk"
        mkdir -p "${bindir}"
        echo "${bindir}" >> "${GITHUB_PATH}"
        echo "bindir=${bindir}" >> "${GITHUB_OUTPUT}"
    - name: Look up cache
      uses: actions/cache@v4
      id: cache
      with:
        path: ${{ steps.mkdir.outputs.bindir }}
        key: yuyawk/github-actions/install-bazelisk-${{ runner.os }}-${{ env.bazelisk_target_version }}
    - name: Install bazelisk if needed
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      shell: bash
      run: |
        if [ "${RUNNER_OS}" == "Linux" ]; then
          bazelisk_basename="bazelisk-linux-amd64"
        elif [ "${RUNNER_OS}" == "macOS" ]; then
          bazelisk_basename="bazelisk-darwin-amd64"
        elif [ "${RUNNER_OS}" == "Windows" ]; then
          bazelisk_basename="bazelisk-windows-amd64.exe"
        else
          echo "${RUNNER_OS} not supported"
          exit 1
        fi

        curl -OL "https://github.com/bazelbuild/bazelisk/releases/download/${bazelisk_target_version}/${bazelisk_basename}" && \
          mv "${bazelisk_basename}" "${BINDIR}/bazelisk"
        chmod +x "${BINDIR}/bazelisk"
      env:
        BINDIR: ${{ steps.mkdir.outputs.bindir }}
