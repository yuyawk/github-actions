---
name: Install bazelisk

inputs:
  bazelisk-version:
    description: Bazelisk version. Defaults to the latest version.
    required: false
    default: null

runs:
  using: composite
  steps:
    - name: Set default version
      if: ${{ inputs.bazelisk-version == null }}
      uses: actions/github-script@v7
      with:
        script: |
          const http = require('http');

          const options = {
            hostname: 'api.github.com',
            path: '/repos/bazelbuild/bazelisk/releases/latest',
            headers: {
              'User-Agent': 'From github actions',
              'X-GitHub-Api-Version': '2022-11-28',
            },
          };

          const req = http.request(options, (res) => {
            let data = '';

            res.on('data', (chunk) => {
              data += chunk;
            });

            res.on('end', () => {
              const json = JSON.parse(data);
              core.exportVariable('bazelisk_target_version', json.name);
            });
          });

          req.on('error', (error) => {
            throw new Error(`Request error! : ${error}`);
          });

          req.end();
    - name: Set given version
      if: ${{ inputs.bazelisk-version != null }}
      shell: bash
      run: |
        echo "bazelisk_target_version=${BAZELISK_VERSION}" >> ${GITHUB_ENV}
      env:
        BAZELISK_VERSION: ${{ inputs.bazelisk-version }}
    - name: Make directory
      shell: bash
      id: mkdir
      run: |
        bindir="${RUNNER_TEMP}/yuyawk/github-actions/install-bazelisk"
        mkdir -p "${bindir}"
        echo "${bindir}" >> "${GITHUB_PATH}"
        echo "bindir=${bindir}" >> "${GITHUB_OUTPUT}"
    - name: Look up cache
      uses: actions/cache@v4
      id: cache
      with:
        path: ${{ steps.mkdir.outputs.bindir }}
        key: yuyawk/github-actions/install-bazelisk-${{ runner.os }}-${{ env.bazelisk_target_version }}
    - name: Install bazelisk if needed
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      shell: bash
      run: |
        if [ "${RUNNER_OS}" == "Linux" ]; then
          bazelisk_basename="bazelisk-linux-amd64"
        elif [ "${RUNNER_OS}" == "macOS" ]; then
          bazelisk_basename="bazelisk-darwin-amd64"
        elif [ "${RUNNER_OS}" == "Windows" ]; then
          bazelisk_basename="bazelisk-windows-amd64.exe"
        else
          echo "${RUNNER_OS} not supported"
          exit 1
        fi

        curl -OL "https://github.com/bazelbuild/bazelisk/releases/download/${bazelisk_target_version}/${bazelisk_basename}" && \
          mv "${bazelisk_basename}" "${BINDIR}/bazelisk"
        chmod +x "${BINDIR}/bazelisk"
      env:
        BINDIR: ${{ steps.mkdir.outputs.bindir }}
